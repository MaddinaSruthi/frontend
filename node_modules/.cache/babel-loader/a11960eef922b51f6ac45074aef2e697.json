{"ast":null,"code":"import _defineProperty from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\MaddinaSruthi\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./dashboard.css\";\nimport PropTypes from \"prop-types\";\nimport { Button, InputBase, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport { getSession } from \"../../actions/userSession\";\nimport { getTasks, getUserTasks } from \"./../../actions/userAction\";\nimport { NavLink } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nvar useStyles = function useStyles() {\n  return {\n    root: {\n      flexGrow: 1,\n      width: \"80%\",\n      height: \"vh\",\n      marginTop: \"2%\",\n      maxWidth: \"80%\",\n      margin: \"auto\"\n    },\n    container: {\n      maxHeight: 440\n    },\n    header: {\n      textAlign: \"center\",\n      marginTop: \"2%\"\n    },\n    btn: {\n      border: \"1px solid black\",\n      margin: \"1%\"\n    },\n    search: {\n      float: \"right\",\n      marginRight: \"2px\",\n      marginTop: \"1.4%\"\n    },\n    input: {\n      float: \"right\",\n      marginTop: \"1%\"\n    }\n  };\n};\n\nvar columns = [{\n  id: \"taskIdentifier\",\n  label: \"Identifier\",\n  align: \"left\"\n}, {\n  id: \"title\",\n  label: \"Title\",\n  minWidth: 170,\n  align: \"left\"\n}, {\n  id: \"progress\",\n  label: \"Progress\",\n  minWidth: 170,\n  align: \"left\"\n}, {\n  id: \"createdAt\",\n  label: \"Created At\",\n  minWidth: 170,\n  align: \"left\"\n}];\n\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        searchfield: e.target.value\n      });\n    };\n\n    _this.state = {\n      page: 0,\n      rowsPerPage: 10,\n      searchfield: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.getSession();\n      // this.props.getTasks();\n      this.props.getUserTasks(this.props.userSession.loginName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var tasks = this.props.tasks;\n      var searchfield = this.state.searchfield;\n      var filteredData = tasks.filter(function (task) {\n        if (task.title.toLowerCase().includes(searchfield.toLowerCase())) {\n          return task;\n        }\n      });\n      var page = this.state.page;\n      var rowsPerPage = this.state.rowsPerPage;\n      var userSession = this.props.userSession;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        style: {\n          fontWeight: \"600\",\n          color: \"white\"\n        },\n        className: classes.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, \"Task List\"), /*#__PURE__*/React.createElement(Paper, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/task/create\",\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          border: \"none\"\n        },\n        className: classes.btn,\n        name: \"btnid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, \"Create Task\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(InputBase, {\n        placeholder: \"Search By Title\",\n        inputProps: {\n          \"aria-label\": \"search\"\n        },\n        name: \"searchfield\",\n        value: this.state.searchfield,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TableContainer, {\n        className: classes.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, columns.map(function (column) {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          style: {\n            minWidth: column.minWidth\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        }, column.label);\n      }))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, filteredData.reverse().slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (task) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: task.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 23\n          }\n        }, columns.map(function (column) {\n          var value = task[column.id];\n          return /*#__PURE__*/React.createElement(TableCell, {\n            key: column.id,\n            align: column.align,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(NavLink, {\n            to: \"/task/\".concat(task.taskIdentifier),\n            style: {\n              textDecoration: \"none\"\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 31\n            }\n          }, value));\n        }));\n      }))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 15, 25],\n        component: \"div\",\n        count: tasks.length,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        onChangePage: function onChangePage(event, newPage) {\n          return _this2.setState({\n            page: newPage\n          });\n        },\n        onChangeRowsPerPage: function onChangeRowsPerPage(event) {\n          return _this2.setState({\n            rowsPerPage: +event.target.value,\n            page: 0\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  tasks: PropTypes.object.isRequired,\n  getSession: PropTypes.func.isRequired,\n  users: PropTypes.object.isRequired,\n  getUserTasks: PropTypes.func.isRequired,\n  userSession: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _defineProperty({\n    user: state.user,\n    userSession: state.userSession,\n    users: state.users,\n    tasks: state.users.userTasks\n  }, \"userSession\", state.userSession);\n};\n\nexport default connect(mapStateToProps, {\n  getUserTasks: getUserTasks,\n  getSession: getSession\n})(withStyles(useStyles)(Dashboard));","map":{"version":3,"sources":["C:/MaddinaSruthi/frontend/src/components/Dashboard/Dashboard.jsx"],"names":["React","Component","connect","PropTypes","Button","InputBase","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Typography","withStyles","getSession","getTasks","getUserTasks","NavLink","SearchIcon","useStyles","root","flexGrow","width","height","marginTop","maxWidth","margin","container","maxHeight","header","textAlign","btn","border","search","float","marginRight","input","columns","id","label","align","minWidth","Dashboard","props","handleChange","e","setState","searchfield","target","value","state","page","rowsPerPage","userSession","loginName","classes","tasks","filteredData","filter","task","title","toLowerCase","includes","fontWeight","color","textDecoration","map","column","reverse","slice","taskIdentifier","length","event","newPage","propTypes","object","isRequired","func","users","mapStateToProps","user","userTasks"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./dashboard.css\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  InputBase,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport { getSession } from \"../../actions/userSession\";\nimport { getTasks, getUserTasks } from \"./../../actions/userAction\";\nimport { NavLink } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst useStyles = () => ({\n  root: {\n    flexGrow: 1,\n    width: \"80%\",\n    height: \"vh\",\n    marginTop: \"2%\",\n    maxWidth: \"80%\",\n    margin: \"auto\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n  header: {\n    textAlign: \"center\",\n    marginTop: \"2%\",\n  },\n  btn: {\n    border: \"1px solid black\",\n    margin: \"1%\",\n  },\n  search: {\n    float: \"right\",\n    marginRight: \"2px\",\n    marginTop: \"1.4%\",\n  },\n  input: {\n    float: \"right\",\n    marginTop: \"1%\",\n  },\n});\nconst columns = [\n  { id: \"taskIdentifier\", label: \"Identifier\", align: \"left\" },\n  { id: \"title\", label: \"Title\", minWidth: 170, align: \"left\" },\n  {\n    id: \"progress\",\n    label: \"Progress\",\n    minWidth: 170,\n    align: \"left\",\n  },\n  {\n    id: \"createdAt\",\n    label: \"Created At\",\n    minWidth: 170,\n    align: \"left\",\n  },\n];\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      rowsPerPage: 10,\n      searchfield: \"\",\n    };\n  }\n  handleChange = (e) => {\n    this.setState({ searchfield: e.target.value });\n  };\n\n  componentDidMount() {\n    // this.props.getSession();\n    // this.props.getTasks();\n    this.props.getUserTasks(this.props.userSession.loginName);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const tasks = this.props.tasks;\n    const { searchfield } = this.state;\n    var filteredData = tasks.filter((task) => {\n      if (task.title.toLowerCase().includes(searchfield.toLowerCase())) {\n        return task;\n      }\n    });\n\n    const { page } = this.state;\n    const { rowsPerPage } = this.state;\n    const { userSession } = this.props;\n\n    return (\n      <div className=\"dashboard\">\n        <Typography\n          variant=\"h3\"\n          style={{ fontWeight: \"600\", color: \"white\" }}\n          className={classes.header}\n        >\n          Task List\n        </Typography>\n        <Paper className={classes.root}>\n          <NavLink to=\"/task/create\" style={{ textDecoration: \"none\" }}>\n            <Button\n              variant=\"contained\"\n              style={{ border: \"none\" }}\n              className={classes.btn}\n              name=\"btnid\"\n            >\n              Create Task\n            </Button>\n          </NavLink>\n          <div className={classes.input}>\n            <InputBase\n              placeholder=\"Search By Title\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              name=\"searchfield\"\n              value={this.state.searchfield}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className={classes.search}>\n            <SearchIcon />\n          </div>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredData\n                  .reverse()\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((task) => {\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={task.id}\n                      >\n                        {columns.map((column) => {\n                          const value = task[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              <NavLink\n                                to={`/task/${task.taskIdentifier}`}\n                                style={{ textDecoration: \"none\" }}\n                              >\n                                {value}\n                              </NavLink>\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n            <TablePagination\n              rowsPerPageOptions={[5, 15, 25]}\n              component=\"div\"\n              count={tasks.length}\n              rowsPerPage={this.state.rowsPerPage}\n              page={this.state.page}\n              onChangePage={(event, newPage) =>\n                this.setState({ page: newPage })\n              }\n              onChangeRowsPerPage={(event) =>\n                this.setState({ rowsPerPage: +event.target.value, page: 0 })\n              }\n            />\n          </TableContainer>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  tasks: PropTypes.object.isRequired,\n  getSession: PropTypes.func.isRequired,\n  users: PropTypes.object.isRequired,\n  getUserTasks: PropTypes.func.isRequired,\n  userSession: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  userSession: state.userSession,\n  users: state.users,\n  tasks: state.users.userTasks,\n  userSession: state.userSession,\n});\n\nexport default connect(mapStateToProps, { getUserTasks, getSession })(\n  withStyles(useStyles)(Dashboard)\n);\n"]},"metadata":{},"sourceType":"module"}