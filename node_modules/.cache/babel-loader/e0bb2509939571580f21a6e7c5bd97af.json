{"ast":null,"code":"import _classCallCheck from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\MaddinaSruthi\\\\frontend\\\\src\\\\components\\\\Task\\\\Task.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Card, CardContent, Chip, Container, Grid, Typography } from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-dom\";\nimport { getTask, deleteTask } from \"./../../actions/userAction\";\nimport { getSession } from \"./../../actions/userSession\";\n\nvar useStyles = function useStyles() {\n  return {\n    root: {\n      \"& > *\": {\n        margin: \"1%\"\n      }\n    },\n    textboxstyle: {\n      width: \"50%\",\n      marginLeft: \"35%\",\n      marginBottom: \"2px\"\n    },\n    typographystyle: {\n      marginTop: \"5px\",\n      color: \"black\"\n    },\n    addremark: {\n      width: \"20%\",\n      textAlign: \"center\",\n      paddinBottom: \"2%\",\n      fontSize: \"120%\",\n      fontWeight: \"120%\",\n      marginRight: \"2%\"\n    },\n    container: {\n      maxHeight: 440\n    },\n    cardroot: {\n      width: \"98%\",\n      margin: \"12px\"\n    },\n    textarea: {\n      width: \"100%\",\n      border: \"1px solid white\",\n      backgroundColor: \"#ddd\",\n      borderRadius: \"10px\",\n      borderBottom: \"none\",\n      outline: \"none\"\n    },\n    remark: {\n      textAlign: \"left\",\n      marginLeft: \"2%\",\n      marginTop: \"1%\"\n    },\n    addBtn: {\n      float: \"right\"\n    },\n    givenby: {\n      marginTop: \"1%\",\n      marginBottom: \"2%\",\n      // fontSize: \"150%\",\n      marginLeft: \"2%\",\n      width: \"100%\",\n      textAlign: \"left\"\n    }\n  };\n};\n\nvar Task = /*#__PURE__*/function (_Component) {\n  _inherits(Task, _Component);\n\n  function Task() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Task);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Task)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClick = function (event) {\n      var taskIdentifier = _this.props.taskIdentifier.taskIdentifier;\n\n      _this.props.deleteTask(taskIdentifier);\n    };\n\n    return _this;\n  }\n\n  _createClass(Task, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var taskIdentifier = this.props.taskIdentifier.taskIdentifier;\n      console.log(\"did :\", taskIdentifier);\n      this.props.getSession();\n      this.props.getTask(taskIdentifier);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var taskIdentifier = this.props.taskIdentifier.taskIdentifier;\n      var classes = this.props.classes;\n      var task = this.props.task;\n      var remark = this.props.tasks.task.remark;\n      console.log(\"DATA :\", taskIdentifier, this.props.userSession.authType);\n      var page = this.setState;\n      console.log(remark);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"85vh\",\n          width: \"100%\",\n          position: \"relative\",\n          top: \"3em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card d-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        variant: \"outlined\",\n        style: {\n          margin: \"10px\",\n          borderRadius: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        maxWidth: \"lg\",\n        style: {\n          minHeight: \"65vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, task.title), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, \"Task Id : \", task.taskIdentifier), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"badge bg-secondary text-light mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        label: task.progress,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, \"Task Description:\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, task.description), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, \"Created At :\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, task.createdAt))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, \"Updated At :\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, task.updatedAt)))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/task/update/\".concat(taskIdentifier),\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 27\n        }\n      }, \"Update Task\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/task/assignDeveloper/\".concat(task.taskIdentifier),\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 27\n        }\n      }, \"Assign Developer\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        onClick: this.onClick.bind(this, task.taskIdentifier),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }\n      }, \"Delete\")))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: classes.cardroot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }, remark !== undefined ? /*#__PURE__*/React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        className: classes.remark,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }\n      }, \"Remarks (\" + remark.length + \")\") : \"\", /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }), remark !== undefined ? remark.reverse().slice(page).map(function (taskremark) {\n        return /*#__PURE__*/React.createElement(Typography, {\n          className: classes.givenby,\n          key: taskremark.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          style: {\n            fontSize: \"150%\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }\n        }, taskremark.givenBy), /*#__PURE__*/React.createElement(Typography, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }\n        }, taskremark.createdAt), /*#__PURE__*/React.createElement(Typography, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }\n        }, taskremark.description), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }\n        }));\n      }) : \"\")))))));\n    }\n  }]);\n\n  return Task;\n}(Component);\n\nTask.propTypes = {\n  getTask: PropTypes.func.isRequired,\n  getSession: PropTypes.func.isRequired,\n  userSession: PropTypes.object.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  tasks: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.tasks,\n    task: state.tasks.task,\n    remarks: state.tasks.task.remark,\n    userSession: state.userSession\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTask: getTask,\n  getSession: getSession,\n  deleteTask: deleteTask\n})(withStyles(useStyles)(Task));","map":{"version":3,"sources":["C:/MaddinaSruthi/frontend/src/components/Task/Task.jsx"],"names":["React","Component","Button","Card","CardContent","Chip","Container","Grid","Typography","withStyles","connect","PropTypes","NavLink","getTask","deleteTask","getSession","useStyles","root","margin","textboxstyle","width","marginLeft","marginBottom","typographystyle","marginTop","color","addremark","textAlign","paddinBottom","fontSize","fontWeight","marginRight","container","maxHeight","cardroot","textarea","border","backgroundColor","borderRadius","borderBottom","outline","remark","addBtn","float","givenby","Task","onClick","event","taskIdentifier","props","console","log","classes","task","tasks","userSession","authType","page","setState","height","position","top","minHeight","title","progress","description","createdAt","updatedAt","textDecoration","bind","undefined","length","reverse","slice","map","taskremark","id","givenBy","propTypes","func","isRequired","object","mapStateToProps","state","remarks"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,IANF,EAOEC,UAPF,QAQO,eARP;AASA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,4BAApC;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AACvBC,IAAAA,IAAI,EAAE;AACJ,eAAS;AACPC,QAAAA,MAAM,EAAE;AADD;AADL,KADiB;AAMvBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,KADK;AAEZC,MAAAA,UAAU,EAAE,KAFA;AAGZC,MAAAA,YAAY,EAAE;AAHF,KANS;AAWvBC,IAAAA,eAAe,EAAE;AACfC,MAAAA,SAAS,EAAE,KADI;AAEfC,MAAAA,KAAK,EAAE;AAFQ,KAXM;AAevBC,IAAAA,SAAS,EAAE;AACTN,MAAAA,KAAK,EAAE,KADE;AAETO,MAAAA,SAAS,EAAE,QAFF;AAGTC,MAAAA,YAAY,EAAE,IAHL;AAITC,MAAAA,QAAQ,EAAE,MAJD;AAKTC,MAAAA,UAAU,EAAE,MALH;AAMTC,MAAAA,WAAW,EAAE;AANJ,KAfY;AAuBvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE;AADF,KAvBY;AA0BvBC,IAAAA,QAAQ,EAAE;AACRd,MAAAA,KAAK,EAAE,KADC;AAERF,MAAAA,MAAM,EAAE;AAFA,KA1Ba;AA8BvBiB,IAAAA,QAAQ,EAAE;AACRf,MAAAA,KAAK,EAAE,MADC;AAERgB,MAAAA,MAAM,EAAE,iBAFA;AAGRC,MAAAA,eAAe,EAAE,MAHT;AAIRC,MAAAA,YAAY,EAAE,MAJN;AAKRC,MAAAA,YAAY,EAAE,MALN;AAMRC,MAAAA,OAAO,EAAE;AAND,KA9Ba;AAsCvBC,IAAAA,MAAM,EAAE;AACNd,MAAAA,SAAS,EAAE,MADL;AAENN,MAAAA,UAAU,EAAE,IAFN;AAGNG,MAAAA,SAAS,EAAE;AAHL,KAtCe;AA2CvBkB,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD,KA3Ce;AA8CvBC,IAAAA,OAAO,EAAE;AACPpB,MAAAA,SAAS,EAAE,IADJ;AAEPF,MAAAA,YAAY,EAAE,IAFP;AAGP;AACAD,MAAAA,UAAU,EAAE,IAJL;AAKPD,MAAAA,KAAK,EAAE,MALA;AAMPO,MAAAA,SAAS,EAAE;AANJ;AA9Cc,GAAP;AAAA,CAAlB;;IAwDMkB,I;;;;;;;;;;;;;;;;UACJC,O,GAAU,UAACC,KAAD,EAAW;AACnB,UAAMC,cAAc,GAAG,MAAKC,KAAL,CAAWD,cAAX,CAA0BA,cAAjD;;AACA,YAAKC,KAAL,CAAWnC,UAAX,CAAsBkC,cAAtB;AACD,K;;;;;;;wCAEmB;AAClB,UAAMA,cAAc,GAAG,KAAKC,KAAL,CAAWD,cAAX,CAA0BA,cAAjD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,cAArB;AACA,WAAKC,KAAL,CAAWlC,UAAX;AACA,WAAKkC,KAAL,CAAWpC,OAAX,CAAmBmC,cAAnB;AACD;;;6BAEQ;AAAA;;AACP,UAAMA,cAAc,GAAG,KAAKC,KAAL,CAAWD,cAAX,CAA0BA,cAAjD;AADO,UAECI,OAFD,GAEa,KAAKH,KAFlB,CAECG,OAFD;AAAA,UAGCC,IAHD,GAGU,KAAKJ,KAHf,CAGCI,IAHD;AAAA,UAICZ,MAJD,GAIY,KAAKQ,KAAL,CAAWK,KAAX,CAAiBD,IAJ7B,CAICZ,MAJD;AAKPS,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,cAAtB,EAAsC,KAAKC,KAAL,CAAWM,WAAX,CAAuBC,QAA7D;AACA,UAAMC,IAAI,GAAG,KAAKC,QAAlB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,0BACE;AACE,QAAA,KAAK,EAAE;AACLkB,UAAAA,MAAM,EAAE,MADH;AAELvC,UAAAA,KAAK,EAAE,MAFF;AAGLwC,UAAAA,QAAQ,EAAE,UAHL;AAILC,UAAAA,GAAG,EAAE;AAJA,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAE;AAAE3C,UAAAA,MAAM,EAAE,MAAV;AAAkBoB,UAAAA,YAAY,EAAE;AAAhC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAE;AAAEwB,UAAAA,SAAS,EAAE;AAAb,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBT,IAAI,CAACU,KAA3B,CAFF,eAGE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgCV,IAAI,CAACL,cAArC,CAHF,eAIE;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,IAAI,CAACW,QAAlB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARF,eAUE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCX,IAAI,CAACY,WAArC,CAVF,eAYE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIZ,IAAI,CAACa,SAAT,CAFF,CADF,CADF,eAOE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIb,IAAI,CAACc,SAAT,CAFF,CADF,CAPF,CAZF,eA+BE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AACE,QAAA,EAAE,yBAAkBnB,cAAlB,CADJ;AAEE,QAAA,KAAK,EAAE;AAAEoB,UAAAA,cAAc,EAAE;AAAlB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CADF,CADF,CADF,eAWE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AACE,QAAA,EAAE,kCAA2Bf,IAAI,CAACL,cAAhC,CADJ;AAEE,QAAA,KAAK,EAAE;AAAEoB,UAAAA,cAAc,EAAE;AAAlB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CADF,CADF,CAXF,eAqBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,OAAO,EAAE,KAAKtB,OAAL,CAAauB,IAAb,CAAkB,IAAlB,EAAwBhB,IAAI,CAACL,cAA7B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CArBF,CA/BF,eA+DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/DF,eAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhEF,CADF,eAsEE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEI,OAAO,CAAClB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,MAAM,KAAK6B,SAAX,gBACC,oBAAC,UAAD;AACE,QAAA,YAAY,MADd;AAEE,QAAA,OAAO,EAAC,IAFV;AAGE,QAAA,SAAS,EAAC,IAHZ;AAIE,QAAA,SAAS,EAAElB,OAAO,CAACX,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,cAAcA,MAAM,CAAC8B,MAArB,MANH,CADD,GAUC,EAXJ,eAaE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcG9B,MAAM,KAAK6B,SAAX,GACG7B,MAAM,CACH+B,OADH,GAEGC,KAFH,CAEShB,IAFT,EAGGiB,GAHH,CAGO,UAACC,UAAD,EAAgB;AACnB,4BACE,oBAAC,UAAD;AACE,UAAA,SAAS,EAAEvB,OAAO,CAACR,OADrB;AAEE,UAAA,GAAG,EAAE+B,UAAU,CAACC,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAE/C,YAAAA,QAAQ,EAAE;AAAZ,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG8C,UAAU,CAACE,OADd,CAJF,eAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaF,UAAU,CAACT,SAAxB,CAPF,eAQE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,UAAU,CAACV,WADd,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,CADF;AAeD,OAnBH,CADH,GAqBG,EAnCN,CADF,CAtEF,CADF,CAJF,CADF,CARF,CADF;AAoID;;;;EAzJgBhE,S;;AA4JnB4C,IAAI,CAACiC,SAAL,GAAiB;AACfjE,EAAAA,OAAO,EAAEF,SAAS,CAACoE,IAAV,CAAeC,UADT;AAEfjE,EAAAA,UAAU,EAAEJ,SAAS,CAACoE,IAAV,CAAeC,UAFZ;AAGfzB,EAAAA,WAAW,EAAE5C,SAAS,CAACsE,MAAV,CAAiBD,UAHf;AAIflE,EAAAA,UAAU,EAAEH,SAAS,CAACoE,IAAV,CAAeC,UAJZ;AAKf1B,EAAAA,KAAK,EAAE3C,SAAS,CAACsE,MAAV,CAAiBD,UALT;AAMf3B,EAAAA,IAAI,EAAE1C,SAAS,CAACsE,MAAV,CAAiBD;AANR,CAAjB;;AASA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClC7B,IAAAA,KAAK,EAAE6B,KAAK,CAAC7B,KADqB;AAElCD,IAAAA,IAAI,EAAE8B,KAAK,CAAC7B,KAAN,CAAYD,IAFgB;AAGlC+B,IAAAA,OAAO,EAAED,KAAK,CAAC7B,KAAN,CAAYD,IAAZ,CAAiBZ,MAHQ;AAIlCc,IAAAA,WAAW,EAAE4B,KAAK,CAAC5B;AAJe,GAAZ;AAAA,CAAxB;;AAOA,eAAe7C,OAAO,CAACwE,eAAD,EAAkB;AACtCrE,EAAAA,OAAO,EAAPA,OADsC;AAEtCE,EAAAA,UAAU,EAAVA,UAFsC;AAGtCD,EAAAA,UAAU,EAAVA;AAHsC,CAAlB,CAAP,CAIZL,UAAU,CAACO,SAAD,CAAV,CAAsB6B,IAAtB,CAJY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Chip,\n  Container,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-dom\";\nimport { getTask, deleteTask } from \"./../../actions/userAction\";\nimport { getSession } from \"./../../actions/userSession\";\n\nconst useStyles = () => ({\n  root: {\n    \"& > *\": {\n      margin: \"1%\",\n    },\n  },\n  textboxstyle: {\n    width: \"50%\",\n    marginLeft: \"35%\",\n    marginBottom: \"2px\",\n  },\n  typographystyle: {\n    marginTop: \"5px\",\n    color: \"black\",\n  },\n  addremark: {\n    width: \"20%\",\n    textAlign: \"center\",\n    paddinBottom: \"2%\",\n    fontSize: \"120%\",\n    fontWeight: \"120%\",\n    marginRight: \"2%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n  cardroot: {\n    width: \"98%\",\n    margin: \"12px\",\n  },\n  textarea: {\n    width: \"100%\",\n    border: \"1px solid white\",\n    backgroundColor: \"#ddd\",\n    borderRadius: \"10px\",\n    borderBottom: \"none\",\n    outline: \"none\",\n  },\n  remark: {\n    textAlign: \"left\",\n    marginLeft: \"2%\",\n    marginTop: \"1%\",\n  },\n  addBtn: {\n    float: \"right\",\n  },\n  givenby: {\n    marginTop: \"1%\",\n    marginBottom: \"2%\",\n    // fontSize: \"150%\",\n    marginLeft: \"2%\",\n    width: \"100%\",\n    textAlign: \"left\",\n  },\n});\n\nclass Task extends Component {\n  onClick = (event) => {\n    const taskIdentifier = this.props.taskIdentifier.taskIdentifier;\n    this.props.deleteTask(taskIdentifier);\n  };\n\n  componentDidMount() {\n    const taskIdentifier = this.props.taskIdentifier.taskIdentifier;\n    console.log(\"did :\", taskIdentifier);\n    this.props.getSession();\n    this.props.getTask(taskIdentifier);\n  }\n\n  render() {\n    const taskIdentifier = this.props.taskIdentifier.taskIdentifier;\n    const { classes } = this.props;\n    const { task } = this.props;\n    const { remark } = this.props.tasks.task;\n    console.log(\"DATA :\", taskIdentifier, this.props.userSession.authType);\n    const page = this.setState;\n    console.log(remark);\n    return (\n      <div\n        style={{\n          height: \"85vh\",\n          width: \"100%\",\n          position: \"relative\",\n          top: \"3em\",\n        }}\n      >\n        <div className=\"card d-block\">\n          <Card\n            variant=\"outlined\"\n            style={{ margin: \"10px\", borderRadius: \"10px\" }}\n          >\n            <Container maxWidth=\"lg\" style={{ minHeight: \"65vh\" }}>\n              <Grid container>\n                <Grid item md={6}>\n                  {/* <!-- project title--> */}\n                  <h1 className=\"mt-0\">{task.title}</h1>\n                  <h4 className=\"mt-0\">Task Id : {task.taskIdentifier}</h4>\n                  <div className=\"badge bg-secondary text-light mb-3\">\n                    <Chip label={task.progress} color=\"primary\" />\n                  </div>\n\n                  <h4>Task Description:</h4>\n\n                  <p className=\"text-muted mb-2\">{task.description}</p>\n\n                  <Grid container spacing={1}>\n                    <Grid item md={4}>\n                      <div className=\"mb-4\">\n                        <h4>Created At :</h4>\n                        <p>{task.createdAt}</p>\n                      </div>\n                    </Grid>\n                    <Grid item sm={4}>\n                      <div className=\"mb-1\">\n                        <h4>Updated At :</h4>\n                        <p>{task.updatedAt}</p>\n                      </div>\n                    </Grid>\n                  </Grid>\n\n                  {/* <div id=\"tooltip-container\">\n                    <h5>Team Members:</h5>                                            \n                </div> */}\n\n                  <Grid container spacing={1}>\n                    <Grid item md={3}>\n                      <div className=\"mb-4\">\n                        <NavLink\n                          to={`/task/update/${taskIdentifier}`}\n                          style={{ textDecoration: \"none\" }}\n                        >\n                          <Button variant=\"outlined\">Update Task</Button>\n                        </NavLink>\n                      </div>\n                    </Grid>\n                    <Grid item md={3}>\n                      <div className=\"mb-4\">\n                        <NavLink\n                          to={`/task/assignDeveloper/${task.taskIdentifier}`}\n                          style={{ textDecoration: \"none\" }}\n                        >\n                          <Button variant=\"outlined\">Assign Developer</Button>\n                        </NavLink>\n                      </div>\n                    </Grid>\n                    <Grid item md={3}>\n                      <div className=\"mb-4\">\n                        <Button\n                          variant=\"outlined\"\n                          onClick={this.onClick.bind(this, task.taskIdentifier)}\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    </Grid>\n                  </Grid>\n                  <br />\n                  <br />\n                </Grid>\n\n                {/* Remark Card */}\n\n                <Grid item md={6}>\n                  <Card className={classes.cardroot}>\n                    {remark !== undefined ? (\n                      <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h2\"\n                        className={classes.remark}\n                      >\n                        {`Remarks (` + remark.length + `)`}\n                      </Typography>\n                    ) : (\n                      \"\"\n                    )}\n                    <CardContent></CardContent>\n                    {remark !== undefined\n                      ? remark\n                          .reverse()\n                          .slice(page)\n                          .map((taskremark) => {\n                            return (\n                              <Typography\n                                className={classes.givenby}\n                                key={taskremark.id}\n                              >\n                                <Typography style={{ fontSize: \"150%\" }}>\n                                  {taskremark.givenBy}\n                                </Typography>\n                                <Typography>{taskremark.createdAt}</Typography>\n                                <Typography>\n                                  {taskremark.description}\n                                </Typography>\n                                <hr />\n                              </Typography>\n                            );\n                          })\n                      : \"\"}\n                  </Card>\n                </Grid>\n              </Grid>\n            </Container>\n          </Card>\n\n          {/* <!-- end card-body--> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  getTask: PropTypes.func.isRequired,\n  getSession: PropTypes.func.isRequired,\n  userSession: PropTypes.object.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  tasks: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  task: state.tasks.task,\n  remarks: state.tasks.task.remark,\n  userSession: state.userSession,\n});\n\nexport default connect(mapStateToProps, {\n  getTask,\n  getSession,\n  deleteTask,\n})(withStyles(useStyles)(Task));\n"]},"metadata":{},"sourceType":"module"}