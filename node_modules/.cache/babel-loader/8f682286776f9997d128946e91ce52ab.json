{"ast":null,"code":"import _defineProperty from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\MaddinaSruthi\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\MaddinaSruthi\\\\frontend\\\\src\\\\components\\\\profile\\\\Profile.jsx\";\nimport React, { Component } from \"react\";\nimport { Navigate, NavLink } from \"react-router-dom\";\nimport \"./profile.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Box, Button, Card, IconButton, InputAdornment, TextField, Typography } from \"@mui/material\";\nimport { Password, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { updateUser, getUser } from \"./../../actions/userAction\";\nimport { getSession } from \"./../../actions/userSession\";\n/**\n * This is class component for Updating User data\n */\n\nvar Profile = /*#__PURE__*/function (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.setState({\n        errors: {}\n      });\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleEdit = function () {\n      _this.setState({\n        editPage: !_this.state.editPage\n      });\n    };\n\n    _this.handleChange = function () {\n      _this.setState({\n        changePassword: !_this.state.changePassword\n      });\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.changePassword) {\n        if (_this.props.user.user.pwd === _this.state.oldPassword) {\n          if (_this.state.newPassword === _this.state.confirmPassword) {\n            var updatedUser = {\n              id: _this.state.id,\n              name: _this.state.name,\n              loginName: _this.state.userName,\n              password: _this.state.newPassword,\n              userType: _this.state.userRole\n            };\n\n            _this.props.getUser(_this.props.userSession.loginName);\n\n            window.alert(\"Password Updated Successfully\");\n\n            _this.props.updateUser(updatedUser);\n          } else {\n            _this.setState({\n              errors: {\n                confirmPassword: \"Password did not Match\"\n              }\n            });\n          }\n        } else if (_this.props.user.user.password !== _this.state.oldPassword) {\n          _this.setState({\n            errors: {\n              oldPassword: \"Old Password entered is Wrong\"\n            }\n          });\n        } else if (_this.state.oldPassword === \"\") {\n          _this.setState({\n            errors: {\n              oldPassword: \"Please Enter Password\"\n            }\n          });\n        }\n      } else {\n        var _updatedUser = {\n          id: _this.state.id,\n          name: _this.state.name,\n          loginName: _this.state.userName,\n          password: _this.state.password,\n          userType: _this.state.userRole\n        };\n        console.log(_updatedUser);\n\n        _this.props.getUser(_this.props.userSession.loginName);\n\n        window.alert(\"Profile Updated Successfully\");\n\n        _this.props.updateUser(_updatedUser);\n      }\n    };\n\n    _this.state = {\n      id: \"\",\n      name: \"\",\n      userName: \"\",\n      password: \"\",\n      userRole: \"\",\n      oldPassword: \"\",\n      confirmPassword: \"\",\n      newPassword: \"\",\n      editPage: false,\n      changePassword: false,\n      showPassword: false,\n      errors: {}\n    };\n    return _this;\n  }\n  /**\n   * This function recieves the props from the nextProps\n   * @param {*} nextProps\n   */\n\n\n  _createClass(Profile, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n\n      var _nextProps$users$user = nextProps.users.user,\n          id = _nextProps$users$user.id,\n          name = _nextProps$users$user.name,\n          loginName = _nextProps$users$user.loginName,\n          password = _nextProps$users$user.password,\n          userType = _nextProps$users$user.userType;\n      console.log(nextProps.users.user);\n      this.setState({\n        id: id,\n        name: name,\n        userName: loginName,\n        password: password,\n        userRole: userType\n      });\n    }\n    /**\n     * This function mounts the actions on the component\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUser(this.props.userSession.loginName);\n    }\n    /**\n     * This function handles the changes done on elements\n     * @param {*} event\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var editPage = this.state.editPage;\n      var changePassword = this.state.changePassword;\n      var errors = this.state.errors;\n      var userSession = this.props.userSession;\n\n      var handleClickShowPassword = function handleClickShowPassword() {\n        _this2.setState({\n          showPassword: !_this2.state.showPassword\n        });\n      };\n\n      var handleMouseDownPassword = function handleMouseDownPassword(event) {\n        event.preventDefault();\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profileContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, userSession.userType !== undefined && userSession.userType === \"notLoggedIn\" ? /*#__PURE__*/React.createElement(Navigate, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(Box, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        varient: \"outlined\",\n        maxWidth: \"sm\",\n        style: {\n          width: \"50%\",\n          height: \"100%\",\n          padding: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        align: \"left\",\n        display: \"inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, \"User Profile\"), changePassword ? \"\" :\n      /*#__PURE__*/\n      // <NavLink to=\"\">\n      React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleEdit,\n        style: {\n          display: \"inline\",\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }\n      }, editPage ? \"Cancel\" : \"Edit Profile\") // </NavLink>\n      , /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, changePassword ? \"\" : /*#__PURE__*/React.createElement(Box, {\n        style: {\n          justifyContent: \"center\",\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"name\",\n        label: \"Name\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.onChange,\n        error: editPage ? this.state.errors.name : \"\",\n        helperText: editPage ? this.state.errors.name : \"\",\n        disabled: editPage ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"loginName\",\n        label: \"User Name\",\n        name: \"userName\",\n        value: this.state.userName,\n        onChange: this.onChange,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 23\n        }\n      })), editPage ? \"\" : /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleChange,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          float: \"right\",\n          marginBottom: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, changePassword ? \"Cancel\" : \"Change Password\"), changePassword !== undefined ? changePassword ? /*#__PURE__*/React.createElement(Box, {\n        style: {\n          justifyContent: \"center\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        error: this.state.errors.oldPassword !== \"\" ? false : true // helperText={this.state.errors.oldPassword}\n        ,\n        name: \"oldPassword\",\n        label: \"Old Password\",\n        value: this.state.oldPassword,\n        onChange: this.onChange,\n        type: this.state.showPassword ? \"text\" : \"password\",\n        id: \"oldPassword\",\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          edge: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 31\n          }\n        }, this.state.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 35\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 35\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      }), errors.oldPassword && /*#__PURE__*/React.createElement(Typography, {\n        color: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 27\n        }\n      }, \"*\", errors.oldPassword), /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"newPassword\",\n        label: \"New Password\",\n        type: this.state.showPassword ? \"text\" : \"password\",\n        id: \"newPassword\",\n        error: this.state.errors.pwd,\n        helperText: this.state.errors.pwd,\n        value: this.state.newPassword,\n        onChange: this.onChange,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          edge: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 31\n          }\n        }, this.state.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 35\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 35\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        error: this.state.newPassword === this.state.confirmPassword ? false : true && \"Password do not match\",\n        helperText: this.state.errors.confirmPassword,\n        name: \"confirmPassword\",\n        label: \"Confirm Password\",\n        type: this.state.showPassword ? \"text\" : \"password\",\n        id: \"confirmpassword\",\n        value: this.state.confirmPassword,\n        onChange: this.onChange,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          edge: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 31\n          }\n        }, this.state.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 35\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 35\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }\n      })) : \"\" : \"\", editPage || changePassword ? /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: \"4%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }\n      }, \"Update\") : \"\")))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nProfile.propTypes = {\n  updateUser: PropTypes.func.isRequired,\n  getUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  users: PropTypes.object.isRequired,\n  getSession: PropTypes.func.isRequired,\n  userSession: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    errors: state.errors,\n    users: state.users,\n    user: state.users.user,\n    userSession: state.userSession\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateUser: updateUser,\n  getUser: getUser,\n  getSession: getSession\n})(Profile);","map":{"version":3,"sources":["C:/MaddinaSruthi/frontend/src/components/profile/Profile.jsx"],"names":["React","Component","Navigate","NavLink","PropTypes","connect","Box","Button","Card","IconButton","InputAdornment","TextField","Typography","Password","Visibility","VisibilityOff","updateUser","getUser","getSession","Profile","props","onChange","event","setState","errors","target","name","value","handleEdit","editPage","state","handleChange","changePassword","onSubmit","preventDefault","user","pwd","oldPassword","newPassword","confirmPassword","updatedUser","id","loginName","userName","password","userType","userRole","userSession","window","alert","console","log","showPassword","nextProps","users","handleClickShowPassword","handleMouseDownPassword","undefined","display","justifyContent","marginTop","width","height","padding","float","marginBottom","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Navigate, NavLink } from \"react-router-dom\";\nimport \"./profile.css\"\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  Box,\n  Button,\n  Card,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Password, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { updateUser, getUser } from \"./../../actions/userAction\";\nimport { getSession } from \"./../../actions/userSession\";\n/**\n * This is class component for Updating User data\n */\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      userName: \"\",\n      password: \"\",\n      userRole: \"\",\n      oldPassword: \"\",\n      confirmPassword: \"\",\n      newPassword: \"\",\n      editPage: false,\n      changePassword: false,\n      showPassword: false,\n      errors: {},\n    };\n  }\n  /**\n   * This function recieves the props from the nextProps\n   * @param {*} nextProps\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const { id, name, loginName, password, userType } = nextProps.users.user;\n    console.log(nextProps.users.user);\n    this.setState({\n      id,\n      name,\n      userName: loginName,\n      password: password,\n      userRole: userType,\n    });\n  }\n  /**\n   * This function mounts the actions on the component\n   */\n  componentDidMount() {\n    this.props.getUser(this.props.userSession.loginName);\n  }\n  /**\n   * This function handles the changes done on elements\n   * @param {*} event\n   */\n\n  onChange = (event) => {\n    this.setState({ errors: {} });\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n   * This toggles profile edit option.\n   */\n  handleEdit = () => {\n    this.setState({ editPage: !this.state.editPage });\n  };\n  /**\n   * This toggles password change option\n   */\n  handleChange = () => {\n    this.setState({ changePassword: !this.state.changePassword });\n  };\n  /**\n   * This function saves the changes on the backend.\n   */\n  onSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.changePassword) {\n      if (this.props.user.user.pwd === this.state.oldPassword) {\n        if (this.state.newPassword === this.state.confirmPassword) {\n          const updatedUser = {\n            id: this.state.id,\n            name: this.state.name,\n            loginName: this.state.userName,\n            password: this.state.newPassword,\n            userType: this.state.userRole,\n          };\n          this.props.getUser(this.props.userSession.loginName);\n          window.alert(\"Password Updated Successfully\");\n          this.props.updateUser(updatedUser);\n        } else {\n          this.setState({\n            errors: {\n              confirmPassword: \"Password did not Match\",\n            },\n          });\n        }\n      } else if (this.props.user.user.password !== this.state.oldPassword) {\n        this.setState({\n          errors: {\n            oldPassword: \"Old Password entered is Wrong\",\n          },\n        });\n      } else if (this.state.oldPassword === \"\") {\n        this.setState({\n          errors: {\n            oldPassword: \"Please Enter Password\",\n          },\n        });\n      }\n    } else {\n      const updatedUser = {\n        id: this.state.id,\n        name: this.state.name,\n        loginName: this.state.userName,\n        password: this.state.password,\n        userType: this.state.userRole,\n      };\n      console.log(updatedUser);\n      this.props.getUser(this.props.userSession.loginName);\n      window.alert(\"Profile Updated Successfully\");\n      this.props.updateUser(updatedUser);\n    }\n  };\n  render() {\n    const { editPage } = this.state;\n    const { changePassword } = this.state;\n    const { errors } = this.state;\n    const { userSession } = this.props;\n    const handleClickShowPassword = () => {\n      this.setState({ showPassword: !this.state.showPassword });\n    };\n    const handleMouseDownPassword = (event) => {\n      event.preventDefault();\n    };\n\n    return (\n      <div className=\"profile\">\n        <div className=\"profileContainer\">\n          {userSession.userType !== undefined &&\n          userSession.userType === \"notLoggedIn\" ? (\n            <Navigate to=\"/login\" />\n          ) : (\n            <Box\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"20px\",\n              }}\n            >\n              <Card\n                varient=\"outlined\"\n                maxWidth=\"sm\"\n                style={{\n                  width: \"50%\",\n                  height: \"100%\",\n                  padding: \"30px\",\n                }}\n              >\n                <Typography variant=\"h4\" align=\"left\" display=\"inline\">\n                  User Profile\n                </Typography>\n\n                {/* Edit Profile Button Toggle */}\n                {changePassword ? (\n                  \"\"\n                ) : (\n                  // <NavLink to=\"\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={this.handleEdit}\n                    style={{ display: \"inline\", float: \"right\" }}\n                  >\n                    {editPage ? \"Cancel\" : \"Edit Profile\"}\n                  </Button>\n                  // </NavLink>\n                )}\n                <hr />\n                <form noValidate onSubmit={this.onSubmit}>\n                  {/* Edit Profile or Change Password form toggle */}\n                  {changePassword ? (\n                    \"\"\n                  ) : (\n                    <Box\n                      style={{\n                        justifyContent: \"center\",\n                        width: \"100%\",\n                        height: \"100%\",\n                      }}\n                    >\n                      {/* <form noValidate onSubmit={this.onSubmit}> */}\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={this.onChange}\n                        error={editPage ? this.state.errors.name : \"\"}\n                        helperText={editPage ? this.state.errors.name : \"\"}\n                        disabled={editPage ? false : true}\n                      />\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"loginName\"\n                        label=\"User Name\"\n                        name=\"userName\"\n                        value={this.state.userName}\n                        onChange={this.onChange}\n                        disabled\n                      />\n\n                      {/* </form> */}\n                    </Box>\n                  )}\n                  {/* Change password Button Toggle */}\n                  {editPage ? (\n                    \"\"\n                  ) : (\n                    <Button\n                      onClick={this.handleChange}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{ float: \"right\", marginBottom: \"10px\" }}\n                    >\n                      {changePassword ? \"Cancel\" : \"Change Password\"}\n                    </Button>\n                  )}\n                  {changePassword !== undefined ? (\n                    changePassword ? (\n                      <Box\n                        style={{\n                          justifyContent: \"center\",\n                          height: \"100%\",\n                        }}\n                      >\n                        {/* <form noValidate onSubmit={this.onSubmit}> */}\n                        <TextField\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          error={\n                            this.state.errors.oldPassword !== \"\" ? false : true\n                          }\n                          // helperText={this.state.errors.oldPassword}\n                          name=\"oldPassword\"\n                          label=\"Old Password\"\n                          value={this.state.oldPassword}\n                          onChange={this.onChange}\n                          type={this.state.showPassword ? \"text\" : \"password\"}\n                          id=\"oldPassword\"\n                          endAdornment={\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                              >\n                                {this.state.showPassword ? (\n                                  <Visibility />\n                                ) : (\n                                  <VisibilityOff />\n                                )}\n                              </IconButton>\n                            </InputAdornment>\n                          }\n                        />\n                        {errors.oldPassword && (\n                          <Typography color=\"error\">\n                            *{errors.oldPassword}\n                          </Typography>\n                        )}\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          name=\"newPassword\"\n                          label=\"New Password\"\n                          type={this.state.showPassword ? \"text\" : \"password\"}\n                          id=\"newPassword\"\n                          error={this.state.errors.pwd}\n                          helperText={this.state.errors.pwd}\n                          value={this.state.newPassword}\n                          onChange={this.onChange}\n                          endAdornment={\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                              >\n                                {this.state.showPassword ? (\n                                  <Visibility />\n                                ) : (\n                                  <VisibilityOff />\n                                )}\n                              </IconButton>\n                            </InputAdornment>\n                          }\n                        />\n\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          error={\n                            this.state.newPassword ===\n                            this.state.confirmPassword\n                              ? false\n                              : true && \"Password do not match\"\n                          }\n                          helperText={this.state.errors.confirmPassword}\n                          name=\"confirmPassword\"\n                          label=\"Confirm Password\"\n                          type={this.state.showPassword ? \"text\" : \"password\"}\n                          id=\"confirmpassword\"\n                          value={this.state.confirmPassword}\n                          onChange={this.onChange}\n                          endAdornment={\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                              >\n                                {this.state.showPassword ? (\n                                  <Visibility />\n                                ) : (\n                                  <VisibilityOff />\n                                )}\n                              </IconButton>\n                            </InputAdornment>\n                          }\n                        />\n                      </Box>\n                    ) : (\n                      \"\"\n                    )\n                  ) : (\n                    \"\"\n                  )}\n\n                  {editPage || changePassword ? (\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{ marginTop: \"4%\" }}\n                    >\n                      Update\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                </form>\n              </Card>\n            </Box>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nProfile.propTypes = {\n  updateUser: PropTypes.func.isRequired,\n  getUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  users: PropTypes.object.isRequired,\n  getSession: PropTypes.func.isRequired,\n  userSession: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  users: state.users,\n  user: state.users.user,\n  userSession: state.userSession,\n});\nexport default connect(mapStateToProps, { updateUser, getUser, getSession })(\n  Profile\n);\n"]},"metadata":{},"sourceType":"module"}